buildscript {
    repositories {
        mavenCentral()
        maven {
            // For JOOQ
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath "nu.studer:gradle-jooq-plugin:3.0.3"
        // For AWS SDK
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE'
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.20'
    id 'com.google.cloud.tools.jib' version '1.0.1'
}

apply plugin: 'nu.studer.jooq'
apply plugin: 'io.spring.dependency-management'

group 'ryochin'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    // SQS
    compile group: 'com.amazonaws', name: 'aws-java-sdk-sqs', version: '1.11.500'
    // JOOQ
    compile 'org.jooq:jooq'
    compile 'mysql:mysql-connector-java:5.1.45'
    // Elasticsearch
    compile 'org.elasticsearch.client:elasticsearch-rest-high-level-client:6.6.1'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

dependencyManagement {
    imports {
        // For AWS SDK
        mavenBom 'software.amazon.awssdk:bom:2.0.0-preview-12'
    }
}

jooq {
    version = '3.11.9'
    edition = 'OSS'
    tables(sourceSets.main) {
        jdbc {
            driver = 'com.mysql.jdbc.Driver'
            url = getProperty 'db.url'
            user = getProperty 'db.user'
            password = getProperty 'db.password'
        }
        generator {
            name = 'org.jooq.codegen.DefaultGenerator'
            database {
                name = 'org.jooq.meta.mysql.MySQLDatabase'
                inputSchema = ''
                includes = '.*'
                excludes = ''
            }
            target {
                packageName = 'jooq'
                directory = 'src/main/java'
            }
        }
    }
}

dependencies {
    // For generate JOOQ Class Task
    jooqRuntime('mysql:mysql-connector-java:5.1.45')
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin/'
    test.java.srcDirs += 'src/test/kotlin/'
}

jar {
    manifest {
        attributes 'Main-Class': 'MainKt'
    }
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

// Setting for Jib
jib {
    from {
        image = "openjdk:11-jre-slim"
    }
    to {
        image = "hakiba/kotlin_elasticsearch_base:${version}"
    }
}